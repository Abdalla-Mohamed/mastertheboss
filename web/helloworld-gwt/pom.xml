<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jboss.quickstarts.wfk</groupId>
    <artifactId>jboss-helloworld-gwt</artifactId>
    <version>2.7.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>JBoss WFK Quickstart: helloworld-gwt</name>
    <description>JBoss WFK Quickstart: Hello World with GWT front-end client</description>
    <url>http://jboss.org/jbossas</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <!-- Activate JBoss Product Maven repository.

        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
        and is only done here to make it easier to use the quickstarts.

        For more information about how to configure Maven for your application,
        see the section entitled 'Use the Maven Repository'
        in the Development Guide for JBoss EAP 6 located here:

        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.3/html-single/Development_Guide
    -->
 

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

     
        <!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
     
        <!-- other plugin versions -->
        <version.org.codehaus.mojo.gwt.maven.plugin>2.8.2</version.org.codehaus.mojo.gwt.maven.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
    </properties>

<dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt</artifactId>
        <version>2.8.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

    <dependencies>
        <dependency>
	        <groupId>javax</groupId>
	        <artifactId>javaee-api</artifactId>
	        <version>7.0</version>
	        <scope>provided</scope>
        </dependency>
            
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <scope>provided</scope>
        </dependency> 
    </dependencies>

    <build>
        <!-- Set the name of the war, used as the context root when the app is 
          deployed -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Exclude client only classes from the deployment. As these 
                      classes compile down to JavaScript, they are not needed at runtime. They 
                      would only introduce runtime dependencies to GWT development libraries. -->
                    <packagingExcludes>**/client/local/**/*.class</packagingExcludes>
                </configuration>
            </plugin>

             <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>2.0.0.Final</version>
            </plugin>

            <!-- GWT plugin to compile client-side java code to javascript and 
              to run GWT development mode -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${version.org.codehaus.mojo.gwt.maven.plugin}</version>
                <configuration>
                    <inplace>true</inplace>
                    <logLevel>INFO</logLevel>
                    <extraJvmArgs>-Xmx512m</extraJvmArgs>
                    <!-- Configure GWT's development mode (formerly known as hosted 
                      mode) to not start the default server (embedded jetty), but to download the 
                      HTML host page from the configured runTarget. -->
                    <noServer>true</noServer>
                    <runTarget>http://localhost:8080/jboss-helloworld-gwt/HelloWorldApp.html</runTarget>
                </configuration>
                <executions>
                    <execution>
                        <id>gwt-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>gwt-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be 
                used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization 
                your app will need. -->
            <!-- By default that is to put the resulting archive into the 
                'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.war.plugin}</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
